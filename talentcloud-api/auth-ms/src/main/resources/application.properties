server.port=8080
spring.application.name=auth-ms

# R2DBC Configuration
spring.r2dbc.url=r2dbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
spring.r2dbc.username=${POSTGRES_USER}
spring.r2dbc.password=${POSTGRES_PASSWORD}

# JDBC Configuration - Needed for Liquibase
spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}

spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create

# Swagger Documentation
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html

# Connection pool settings
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=10

# Liquibase configuration
spring.liquibase.enabled=true
spring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.xml
spring.liquibase.default-schema=public

#### Keycloak Configuration ####
KEYCLOAK_URL=${KEYCLOAK_URL}
KEYCLOAK_REALM=${KEYCLOAK_REALM}
# Admin login (for KeycloakService using password grant)
KEYCLOAK_ADMIN_USERNAME=${KEYCLOAK_ADMIN_USERNAME}
KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
# OAuth2 login client (for AuthService login)
keycloak.client-id=${CLIENT_ID}
keycloak.client-secret=${CLIENT_SECRET}
# JWT Resource Server config (for securing endpoints)
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_URL}/realms/${KEYCLOAK_REALM}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/certs
#######

# Logging Configuration
logging.level.liquibase=DEBUG
logging.level.org.springframework.r2dbc=DEBUG
logging.level.org.springframework.data.r2dbc=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.io.micrometer=DEBUG
logging.level.brave=DEBUG
logging.level.zipkin=DEBUG


# Enable Zipkin for distributed tracing using Brave
management.zipkin.tracing.endpoint=http://zipkin.monitoring.svc.cluster.local:9411
management.trace.sampling.probability=1.0

# Enable Micrometer Tracing with Brave
management.metrics.enable.all=true
management.endpoints.web.exposure.include=health,info,metrics,prometheus,trace

# Enable Prometheus metrics collection via Micrometer
management.endpoint.prometheus.access=unrestricted

# Expose additional management endpoints
management.endpoint.health.show-details=always