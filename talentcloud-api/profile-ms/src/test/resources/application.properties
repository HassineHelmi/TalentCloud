spring.application.name=profile-ms
server.port=8081

# Default PostgreSQL Configuration
spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Default JPA Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true

# Hibernate Dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#### Keycloak Configuration ####
keycloak.client-id=${CLIENT_ID}
keycloak.client-secret=${CLIENT_SECRET}
# JWT Resource Server config (for securing endpoints)
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_URL}/realms/${KEYCLOAK_REALM}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/certs

# Liquibase Configuration
spring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.xml
spring.liquibase.enabled=true

# Swagger / OpenAPI Configuration
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html

# Cache Configuration
spring.cache.type=redis

# Actuator Endpoints
management.endpoints.web.exposure.include=*

# Logging Configuration
logging.level.liquibase=DEBUG
logging.level.org.springframework.r2dbc=DEBUG
logging.level.org.springframework.data.r2dbc=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.io.micrometer=DEBUG
logging.level.brave=DEBUG
logging.level.zipkin=DEBUG

# Zipkin Tracing Configuration
management.zipkin.tracing.endpoint=http://zipkin.monitoring.svc.cluster.local:9411
management.trace.sampling.probability=1.0

# Prometheus Metrics Configuration
management.endpoint.prometheus.access=unrestricted

# Health Endpoint Configuration
management.endpoint.health.show-details=always
logging.level.org.hibernate.type.descriptor.sql=TRACE

#### AWS Configuration ####
# AWS Credentials (use environment variables or AWS credential chain in production)

aws.accessKeyId=${AWS_ACCESS_KEY_ID}
aws.secretKey=${AWS_SECRET_ACCESS_KEY}
aws.region=${AWS_REGION:us-east-1}
aws.s3.bucket-name= tekbootwebsite2
aws.lambda.function-name=your-lambda-function-name


# File upload configuration
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

# Redis Configuration (commented out)
# spring.data.redis.host=
# spring.data.redis.port=6379

# MongoDB Configuration (commented out, placeholder)
# spring.data.mongodb.uri=mongodb://localhost:27017/profiledb
# spring.data.mongodb.username=mongouser
# spring.data.mongodb.password=mongopassword
# spring.data.mongodb.authentication-database=admin